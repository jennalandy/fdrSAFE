% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_locfdr_grid.R
\name{build_locfdr_grid}
\alias{build_locfdr_grid}
\title{Build locfdr Grid}
\usage{
build_locfdr_grid(
  test_statistics,
  pct_range = c(0, 0.2),
  pct0_range = c(0, 0.3),
  nulltype = c(1, 2, 3),
  type = c(0, 1),
  grid_depth = 5,
  parallel_param = NULL,
  parallel = min(TRUE, n_workers > 1),
  drop_pi0_1 = TRUE,
  n_workers = max(parallel::detectCores() - 2, 1),
  verbose = FALSE
)
}
\arguments{
\item{test_statistics}{vector, test statistics}

\item{pct_range}{vector c(min, max), range for pct hyperparameter. \code{pct} is
the excluded tail proportions of zz's when fitting f(z).
pct=0 includes full range of zz's.}

\item{pct0_range}{vector c(min, max), range for pct0 hyperparameter. \code{pct0}
is the proportion of the zz distribution used in fitting the null density
f0(z) by central matching.}

\item{nulltype}{vector, options for nulltype hyperparameter. \code{nulltype}
is the type of null hypothesis assumed in estimating f0(z), for
use in the fdr calculations. 0 is the theoretical null N(0,1),
1 is maximum likelihood estimation, 2 is central matching estimation,
3 is a split normal version of 2.}

\item{type}{vector, options for type hyperparameter. \code{type} is the type of
fitting used for f; 0 is a natural spline, 1 is a polynomial.}

\item{grid_depth}{integer, number of evenly-spaced values of continuous parameters
considered within their respective \verb{_range}.}

\item{parallel_param}{BiocParallel object}

\item{parallel}{boolean, whether to utilize parallelization}

\item{drop_pi0_1}{boolean, whether to discard models that estimate pi0 = 1}

\item{n_workers}{integer, number of cores to use if parallel}

\item{verbose}{boolean}
}
\value{
data.frame, each row is a possible set of hyperparameters for locfdr
}
\description{
Build a factorial grid of hyperparameters for locfdr and
reduce to hyperparameter sets that can be run on provided data without error.
}
\examples{
set.seed(123)
test_statistics = c(rnorm(800), runif(100, -10, -5), runif(100, 5, 10))
locfdr_grid = build_locfdr_grid(test_statistics)
}
